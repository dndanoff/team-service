/*
 * This file is generated by jOOQ.
*/
package com.danoff.team.db.tables;


import com.danoff.team.db.Keys;
import com.danoff.team.db.Public;
import com.danoff.team.db.tables.records.TeamRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Team extends TableImpl<TeamRecord> {

    private static final long serialVersionUID = 959258639;

    /**
     * The reference instance of <code>PUBLIC.TEAM</code>
     */
    public static final Team TEAM = new Team();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeamRecord> getRecordType() {
        return TeamRecord.class;
    }

    /**
     * The column <code>PUBLIC.TEAM.ID</code>.
     */
    public final TableField<TeamRecord, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>PUBLIC.TEAM.NAME</code>.
     */
    public final TableField<TeamRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.TEAM.PROJECT_NAME</code>.
     */
    public final TableField<TeamRecord, String> PROJECT_NAME = createField("PROJECT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>PUBLIC.TEAM.ESTABLISHED_DATE</code>.
     */
    public final TableField<TeamRecord, LocalDate> ESTABLISHED_DATE = createField("ESTABLISHED_DATE", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * Create a <code>PUBLIC.TEAM</code> table reference
     */
    public Team() {
        this("TEAM", null);
    }

    /**
     * Create an aliased <code>PUBLIC.TEAM</code> table reference
     */
    public Team(String alias) {
        this(alias, TEAM);
    }

    private Team(String alias, Table<TeamRecord> aliased) {
        this(alias, aliased, null);
    }

    private Team(String alias, Table<TeamRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TeamRecord, Long> getIdentity() {
        return Keys.IDENTITY_TEAM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeamRecord> getPrimaryKey() {
        return Keys.TEAM_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeamRecord>> getKeys() {
        return Arrays.<UniqueKey<TeamRecord>>asList(Keys.TEAM_PK, Keys.CONSTRAINT_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Team as(String alias) {
        return new Team(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Team rename(String name) {
        return new Team(name, null);
    }
}
